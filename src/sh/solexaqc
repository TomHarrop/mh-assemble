#!/usr/bin/env bash

printf "[ %s: Run SolexaQA++ on trimmed libraries ]\n" \
    "$(date)"

# shellcheck disable=SC1091
source "src/sh/bash_header"
# shellcheck disable=SC1091
source "src/sh/io_parser"

# make outdir
outdir="$(dirname "${other_output}")"
for oo in "${other_output[@]}"; do
    if grep -q "_R1" <<< "$(basename "${oo}")"; then 
        bn="$(basename "${oo//_R1/}" .fastq.gz.quality)"
    fi
done
log_file="${outdir}/${bn}_solexaqc.log.txt"
if [[ ! -d "${outdir}" ]]; then
    mkdir -p "${outdir}"
fi

# build command (SolexaQA doesn't care about R1 and R2)
my_solexaqc="bin/SolexaQA++"
cmd=( "${my_solexaqc}" analysis "${input_fq[@]}" --directory "${outdir}"
      --illumina )

shopt -s extglob
printf "Final command line: "
printf "%s " "${cmd[@]//+([[:blank:]])/ }"
printf "\n"
shopt -u extglob

# run SolexaQA
srun --ntasks=1 --cpus-per-task="${max_cpus}" --exclusive \
    --output="${log_file}" "${cmd[@]}" &

printf "[ %s: Waiting for SolexaQA++ to finish ]\n" "$(date)"
FAIL=0
fail_wait

# log metadata
metadata_file="${outdir}/${bn}.METADATA.csv"

printf "[ %s: Logging metadata ]\n" "$(date)"
printf "metadata_file: %s\n" "${metadata_file}"
cat <<- _EOF_ > "${metadata_file}"
    Script,${0}
    branch,$(git rev-parse --abbrev-ref HEAD)
    hash,$(git rev-parse HEAD)
    date,$(date +%F)
    SolexaQC++ version,$("${my_solexaqc}" 2>&1 | sed '2q;d')
    output,${outdir}
_EOF_

printf "[ %s: Done ]\n" "$(date)"

exit 0
