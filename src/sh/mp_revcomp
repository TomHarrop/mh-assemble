#!/usr/bin/env bash

printf "[ %s: Reverse-complement mate pair reads for velvet ]\n" \
    "$(date)"

# shellcheck disable=SC1091
source "src/sh/bash_header"
# shellcheck disable=SC1091
source "src/sh/io_parser"

# make outdir
outdir="$(dirname "${output_fq}")"
if [[ ! -d "${outdir}" ]]; then
    mkdir -p "${outdir}"
fi

# try
# fastx_reverse_complement -i INFILE.fastq.gz -o OUTFILE.fastq && gzip -9 OUTFILE.fastq
# or
# zcat infile | fastx_reverse_complement -o OUTFILE.fastq && gzip -9 OUTFILE.fastq

for fq_file in "${input_fq[@]}"; do
    bn="$(basename "${fq_file}" _decon.fastq.gz)"
    outfile1="${outdir}/${bn}_rc.fastq"
    log_file="${outdir}/${bn}_rc.log.txt"
    cmd1=( zcat "${fq_file}" "|" fastx_reverse_complement -o "${outfile1}"
           "&&" gzip -9 "${outfile1}" )
    shopt -s extglob
    printf "Final command line: "
    printf "%s " "${cmd1[@]//+([[:blank:]])/ }"
    #printf " ; "
    #printf "%s " "${cmd2[@]//+([[:blank:]])/ }"
    printf "\n"
    shopt -u extglob

    srun --ntasks=1 --cpus-per-task=1 --exclusive \
        --job-name="${bn}" --output="${log_file}" "${cmd1[@]}" &
done

printf "[ %s: Waiting for fastx_reverse_complement to finish ]\n" "$(date)"
FAIL=0
fail_wait

# log metadata
metadata_file="${outdir}/METADATA.csv"

printf "[ %s: Logging metadata ]\n" "$(date)"
printf "metadata_file: %s\n" "${metadata_file}"
cat <<- _EOF_ > "${metadata_file}"
    Script,${0}
    branch,$(git rev-parse --abbrev-ref HEAD)
    hash,$(git rev-parse HEAD)
    date,$(date +%F)
    fastx_reverse_complement version,$(fastx_reverse_complement -h 2>&1 | sed '2q;d')
    output,${outdir}
_EOF_

printf "[ %s: Done ]\n" "$(date)"

exit 0
