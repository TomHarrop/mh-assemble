#!/usr/bin/env bash

printf "[ %s: Prepare velvetg hash files with velveth ]\n" \
    "$(date)"

# shellcheck disable=SC1091
source "src/sh/bash_header"
# shellcheck disable=SC1091
source "src/sh/io_parser"

# make outdir
outdir="$(dirname "${other_output}")"
if [[ ! -d "${outdir}" ]]; then
    mkdir -p "${outdir}"
fi

# set number of processors
# export OMP_THREAD_LIMIT="${max_cpus}"

# set velveth binary
my_velveth="bin/velvet/velveth"

# pair the files
for fq_file in "${input_fq[@]}"; do
    bn="$(basename "${fq_file}" .fastq.gz)"
    if grep -q "_R1" <<< "${bn}"; then
        if grep -q "2125-06-11-1" <<< "${bn}"; then
            ifq_r1="${fq_file}"
        elif grep -q "_pe" <<< "${bn}"; then
            ifq_pe_r1="${fq_file}"
        elif grep -q "_se" <<< "${bn}"; then
            ifq_se_r1="${fq_file}"
        elif grep -q "_mp" <<< "${bn}"; then
            ifq_mp_r1="${fq_file}"
        elif grep -q "_unknown" <<< "${bn}"; then
            ifq_unk_r1="${fq_file}"
        fi
    elif grep -q "_R2" <<< "${bn}"; then
        if grep -q "2125-06-11-1" <<< "${bn}"; then
            ifq_r2="${fq_file}"
        elif grep -q "_pe" <<< "${bn}"; then
            ifq_pe_r2="${fq_file}"
        elif grep -q "_se" <<< "${bn}"; then
            ifq_se_r2="${fq_file}"
        elif grep -q "_mp" <<< "${bn}"; then
            ifq_mp_r2="${fq_file}"
        elif grep -q "_unknown" <<< "${bn}"; then
            ifq_unk_r2="${fq_file}"
        fi
    fi
done

printf "\tfq_r1: %s\n\tfq_r2: %s\n" "${ifq_r1}" "${ifq_r2}"
printf "\tifq_pe_r1: %s\n\tifq_pe_r2: %s\n" "${ifq_pe_r1}" "${ifq_pe_r2}"
printf "\tifq_se_r1: %s\n\tifq_se_r2: %s\n" "${ifq_se_r1}" "${ifq_se_r2}"
printf "\tifq_mp_r1: %s\n\tifq_mp_r2: %s\n" "${ifq_mp_r1}" "${ifq_mp_r2}"
printf "\tifq_unk_r1: %s\n\tifq_unk_r2: %s\n" "${ifq_unk_r1}" "${ifq_unk_r2}"

# parameters
 maxkmerlength="77"
 minkmerlength="45"
          step="8"

# build command
cmd=( "${my_velveth}" "${outdir}" "${minkmerlength},${maxkmerlength},${step}"
      -short        -fastq           "${ifq_se_r1}"  "${ifq_se_r2}"
      -shortPaired  -fastq -separate "${ifq_r1}"     "${ifq_r2}"
      -shortPaired2 -fastq -separate "${ifq_pe_r1}"  "${ifq_pe_r2}"
      -shortPaired3 -fastq -separate "${ifq_mp_r1}"  "${ifq_mp_r2}"
      -shortPaired4 -fastq -separate "${ifq_unk_r1}" "${ifq_unk_r2}"
      -create_binary )
shopt -s extglob
printf "Final command line: "
printf "%s " "${cmd[@]//+([[:blank:]])/ }"
printf "\n"
shopt -u extglob

# run velveth
log_file="${outdir}/velveth.log.txt"
"${cmd[@]}" &> "${log_file}" &

printf "[ %s: Waiting for velveth to finish ]\n" "$(date)"
FAIL=0
fail_wait

# log metadata
metadata_file="${outdir}/METADATA.csv"

printf "[ %s: Logging metadata ]\n" "$(date)"
printf "metadata_file: %s\n" "${metadata_file}"
cat <<- _EOF_ > "${metadata_file}"
    Script,${0}
    branch,$(git rev-parse --abbrev-ref HEAD)
    hash,$(git rev-parse HEAD)
    date,$(date +%F)
    velveth,$("${my_velveth}" 2>&1 | sed '2q;d')
    output,${outdir}
_EOF_

printf "[ %s: Done ]\n" "$(date)"

exit 0
